import { ShopProductModel } from "@app/_models/shop";

export class Common {
      static addToCart(product: any) {

        const productModel= new ShopProductModel();
        productModel.itemID=product.itemID;
        productModel.itemCode=product.itemCode;
        productModel.itemDescription=product.itemDescription;
        productModel.weight=product.weight;
        productModel.itemTypeID=product.itemTypeID;
        productModel.tinyImageUrl=product.tinyImageUrl;
        productModel.smallImageUrl=product.smallImageUrl;
        productModel.largeImageUrl=product.largeImageUrl;
        productModel.shortDetail1=product.shortDetail1;
        productModel.shortDetail2=product.shortDetail2;
        productModel.shortDetail3=product.shortDetail3;
        productModel.shortDetail4=product.shortDetail4;
        productModel.longDetail1=product.longDetail1;
        productModel.longDetail2=product.longDetail2;
        productModel.longDetail3=product.longDetail3;
        productModel.longDetail4=product.longDetail4;
        productModel.isVirtual=product.isVirtual;
        productModel.allowOnAutoOrder=product.allowOnAutoOrder;
        productModel.isGroupMaster=product.isGroupMaster;
        productModel.groupMasterItemDescription=product.groupMasterItemDescription;
        productModel.groupMembersDescription=product.groupMembersDescription;
        productModel.isDynamicKitMaster=product.isDynamicKitMaster;
        productModel.dynamicKitCategories=product.dynamicKitCategories;
        productModel.staticKitChildren=product.staticKitChildren;
        productModel.priceTypeID=product.priceTypeID;
        productModel.currencyCode=product.currencyCode;
        productModel.price=product.price;
        productModel.bV=product.bV;
        productModel.cV=product.cV;
        productModel.priceEachOverride=product.priceEachOverride;
        productModel.taxableEachOverride=product.taxableEachOverride;
        productModel.commissionableVolumeEachOverride=product.commissionableVolumeEachOverride;
        productModel.businessVolumeEachOverride=product.businessVolumeEachOverride;
        productModel.shippingPriceEachOverride=product.shippingPriceEachOverride;
        productModel.otherPrice1=product.otherPrice1;
        productModel.otherPrice2=product.otherPrice2;
        productModel.otherPrice3=product.otherPrice3;
        productModel.otherPrice4=product.otherPrice4;
        productModel.otherPrice5=product.otherPrice5;
        productModel.otherPrice6=product.otherPrice6;
        productModel.otherPrice7=product.otherPrice7;
        productModel.otherPrice8=product.otherPrice8;
        productModel.otherPrice9=product.otherPrice9;
        productModel.otherPrice10=product.otherPrice10;
        productModel.field1=product.field1;
        productModel.field2=product.field2;
        productModel.field3=product.field3;
        productModel.field4=product.field4;
        productModel.field5=product.field5;
        productModel.field6=product.field6;
        productModel.field7=product.field7;
        productModel.field8=product.field8;
        productModel.field9=product.field9;
        productModel.field10=product.field10;
        productModel.otherCheck1=product.otherCheck1;
        productModel.otherCheck2=product.otherCheck2;
        productModel.otherCheck3=product.otherCheck3;
        productModel.otherCheck4=product.otherCheck4;
        productModel.otherCheck5=product.otherCheck5;
        productModel.sortOrder=product.sortOrder;
        productModel.productImage=product.productImage;
        productModel.iD=product.iD;
        productModel.quantity=product.quantity;
        productModel.parentItemCode=product.parentItemCode;
        productModel.groupMasterItemCode=product.groupMasterItemCode;
        productModel.dynamicKitCategory=product.dynamicKitCategory;
        productModel.type=product.type;
        productModel.categoryID=product.categoryID;
        productModel.totalItems=product.totalItems;
        productModel.inventoryFlag=product.inventoryFlag  ;
        productModel.inventoryFlagDesc=product.inventoryFlagDesc;
        productModel.itemInventory=product.itemInventory;
        productModel.image_01=product.image_01;
        productModel.image_02=product.image_02;
        productModel.image_03=product.image_03;
        return productModel;
      }
    }
